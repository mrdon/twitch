schedule:
    defaults:
        duration: 2h
        notify_discord: -30m

    events:
    - start: "2021-10-19T15:00"
      title: "Tips to code faster (and which tips to avoid!)"
      sections:
        - title: Tips to code faster
          byline: ... and what tips to avoid!
        - title: "Tip: Learn to type properly"
          byline: "but speed doesn't matter"
        - title: "Bad Tip: Expensive keyboards pay off"
          byline: "Fun yes, but not faster"
        - title: "Tip: Stay away from the mouse"
          byline: Keyboard shortcuts ftw
        - title: "Tip: Pair programming"
          byline: Hard to do remotely, but possible
        - title: "Tip: Find the flow and stay in it"
          byline: "Avoid meetings and distractions"
        - title: "Bad Tip: Avoid ALL meetings"
          byline: "Coding the wrong thing fast is worse"
        - title: "Tip: Use tech specs for big projects"
          byline: "Again, make sure you are coding to the right problem"
        - title: "Tip: Use Java (or something like it)"
          byline: "Compilers and refactoring tools are huge"
        - title: "Tip: Forget the code style wars"
          byline: "Consistency and automation over squabbling and effort"
        - title: "Tip: Get it right"
          byline: "90% of time is spent on maintenance"

    - start: "2021-10-21T15:00"
      title: "[Python] Redis-based rate-limiting"
    - start: "2021-10-28T15:00"
      title: "What failure looks like: a real-world incident post-mortem and discussion"
      sections:
        - title: What failure looks like
          byline: A real-world incident post-mortem
        - title: The smoke before the fire 
          byline: What are these new errors?
        - title: The world is on fire 
          byline: What is the customer impact?
        - title: Fix 1 - Stop the bleeding 
          byline: How do we get back to mostly working?
        - title: Fix 2 - Resolve the incident
          byline: How do we get back to normal?
        - title: Fix 3 - Prevent this class of failure 
          byline: How do we ensure this never happens again?
        - title: Final thoughts
          byline: Failure happens, so deal with it

    - start: "2021-11-02T15:00"
      duration: 1h
      title: "Why you should fire your ops team"
      sections: 
        - title: Welcome!
          byline: Let's get spicy
        - title: What is an Ops team? 
          byline: I miss the term 'SysOp'
        - title: Ops hides your pains
          byline: Pain is key to learning
        - title: Ops handoffs are error-prone
          byline: The more devs can take it end to end, the better
        - title: Ops shows you down
          byline: Research shows dev-driven, faster deployments rule
        - title: Ops makes devs (the bad kind of) lazy
          byline: Devs focus on closing tickets rather than delivering value
        - title: Ops just sucks
          byline: "Who wants to fight fires and clean up other people's messes?"
        - title: "Solution: DevOps"
          byline: Mix devs and operations together from both sides
        - title: Ops -> Operational Platform
          byline: Ops owns the operational platform. Devs own what's on top.
        - title: Devs -> YBIYRUI
          byline: You build it, you run it
        - title: "Takeaway: Stop dumping on Ops"
          byline: Automate, empower, and collaborate
    - start: "2021-11-04T15:00"
      title: "[Python/Go] Implement a custom Terraform provider"
    - start: "2021-11-09T15:00"
      title: "Secrets to a delightful(!) pull request process"
      sections: 
        - title: Secrets to a delighful(!) PR process
          byline: Why does it take so much time?
        - title: What are pull requests?
          byline: Do we even need them?
        - title: "1. Measure"
          byline: You can't improve what you don't measure
        - title: "2. Focus on the biggest bucket"
          byline: Is it waiting, reviewing, or merging?
        - title: "3. Only assign one person"
          byline: Everyone's job means no ones job
        - title: "4. Consider domain and tech expertise"
          byline: One domain expert, one tech expert
        - title: "5. Automate the small stuff"
          byline: Stop the nitpicking comments on spacing!
        - title: "6. Spec big things ahead of time"
          byline: Reviews shouldn't be a surprise
        - title: "7. Keep them small"
          byline: "Think \"byte-sized\" #dadjoke"
        - title: "8. Take it off line"
          byline: Keep the heat out of the review
        - title: "9. Automate deployment"
          byline: Automation the end and work backwards
        - title: "10. Automate merging"
          byline: Ship when ready, not when you get around to it
        - title: "Takeaway: PRs don't have to suck"
          byline: A good PR process is the backbone of an elite team
        - title: "Q&A: What PR tips have you picked up?"
          byline: "Share in chat and use '$quote'"
    - start: "2021-11-11T15:00"
      title: "[Python] Discord, Twitch, and Gnome automation"
    - start: "2021-11-16T16:00"
      title: "Why GraphQL is the next SOAP (it's a good thing!)"
      sections:
        - title: "Why GraphQL is the next SOAP (it's a good thing!)"
          byline: "That's right - a GOOD thing!"
        - title: "What problem are we trying to solve?"
          byline: "And no, it isn't to fund consultancies"
        - title: "What is SOAP?"
          byline: "A (very) brief history of SOAP"
        - title: "What did SOAP get right?"
          byline: "Other than that catchy name"
        - title: "1. Text-based"
          byline: "Easily debuggable, can roll by hand"
        - title: "2. Structured content"
          byline: "Envelope -> [Header, Body, Fault]"
        - title: "3. Extensible"
          byline: "For its faults, XML is as it says, extensible"
        - title: "4. HTTP-friendly"
          byline: "Works with firewalls, which we take for granted now"
        - title: "5. Self-describing"
          byline: "Discover what endpoints and what they take automatically"
        - title: "Ok, so why did SOAP fail?"
          byline: "How much time you got? :)"
        - title: "'REST' is better in every way, right?"
          byline: "What even is REST?"
        - title: "GraphQL is the spiritual successor of SOAP"
          byline: "Everything you want, nothing you don't"
        - title: "1. Text-based"
          byline: "Yup, test with curl or wget"
        - title: "2. Structured content"
          byline: "HTTP headers, query, mutations, errors"
        - title: "3. Extensible"
          byline: "Use headers to layer, directives to extend"
        - title: "4. HTTP-friendly"
          byline: "Yup, and this time, HTTP only"
        - title: "5. Self-describing"
          byline: "Introspection, validation, even built-in playground"
        - title: "Why GraphQL is even better"
          byline: "The apprentice has become the master"
        - title: "1. No more XML!"
          byline: "Ok, this is an easy one"
        - title: "2. Batching by default"
          byline: "Request only what you want"
        - title: "3. Observability dream"
          byline: "Know what fields and even arguments are used"
        - title: "4. Eliminate N+1 queries"
          byline: "Get a book, its authors, and their books"
        - title: "5. Just enough specification"
          byline: "SOAP was too much, REST too little, GraphQL just right"
        - title: "Getting started resources"
          byline: "It isn't hard, really"
        - title: "Conclusions"
          byline: "Learn from the past, but do better"
        - title: "Questions?"
          byline: "Let's talk more about how awesome SOAP was" 

    - start: "2021-11-18T15:00"
      title: "[Python] Startup coding"
    - start: "2021-11-23T15:00"
      title: "Continuous Deployment checklist"
      sections:
        - title: "What is Continuous Deployment?"
          byline: "... and why is it super awesome?"
        - title: "Why a checklist?"
          byline: "Sadly, Continuous Deployment isn't for everyone"
        - title: "Let's group this"
          byline: "Must have, nice to have, and superstar level"
        - title: "Group 1 - Must haves"
          byline: "Don't leave home without 'it'"
        - title: "[ ] The right-sized team"
          byline: "Too big? Try release trains instead"
        - title: "[ ] Automated, e2e testing"
          byline: "Think Selenium, Cypress, or Cucumber"
        - title: "[ ] Dev access to prod metrics"
          byline: "Devs need to understand the impact of their change"
        - title: "[ ] Deployment tracking"
          byline: "What deploys when *cough* Sleuth *cough*"
        - title: "[ ] Automated, dev-driven deployment"
          byline: "Um, ok, this is a gimme"
        - title: "[ ] Super fast rollbacks"
          byline: "Often different than normal deployments"
        - title: "[ ] Feature flags"
          byline: "Separate code deployment and feature enabling"
        - title: "What'd I miss?"
          byline: "Any other must haves in your experience?"
        - title: "Group 2 - Nice to haves"
          byline: "You probably want these"
        - title: "[ ] Devs on-call"
          byline: "At least business hours on-call"
        - title: "[ ] Read-only access to prod data sources"
          byline: "Sometimes you just need to access the source"
        - title: "[ ] Delivery metrics like DORA"
          byline: "Surprise! Sleuth again :)"
        - title: "[ ] Canary deployments"
          byline: "Minimize risk by rolling out in chunks"
        - title: "[ ] Developers own the deployment pipeline"
          byline: "Close the loop"
        - title: "What'd I miss?"
          byline: "Any other nice-to-haves in your experience?"
        - title: "Group 3: Superstar features"
          byline: "CD in style, baby"
        - title: "[ ] Automated rollbacks"
          byline: "Fully automate health tracking and response"
        - title: "[ ] Geo-aware deployment pipelines"
          byline: "Update regions that are sleeping first"
        - title: "[ ] Automated, conditional pipelines"
          byline: "Automatically adjust flow based on the type of change"
        - title: "What'd I miss?"
          byline: "Any other superstar prereqs in your experience?"
        - title: "Your turn"
          byline: "Is CD worth it? What is your story?"
    - start: "2021-11-30T15:00"
      title: "New presentation studio testing, feedback needed!"
      sections:
        - title: "Your turn"
          byline: "Is CD worth it? What is your story?"
    - start: "2021-12-02T15:00"
      title: "[Python] Startup coding"
    - start: "2021-12-07T15:00"
      title: "Myths of software dev over 40 - tech talk/discussion"
      duration: 3h
      sections:
        - title: "Myths of software dev over 40"
          byline: "Yes, there is life after 40"
        - title: "Who is this for?"
          byline: "Not just us GenX 'boomers'"
        - title: "Want to learn to code?"
          byline: "Know what you are getting into"
        - title: "New to coding?"
          byline: "This is what awaits you :)"
        - title: "Been coding a while?"
          byline: "Old people unite!"
        - title: "#1 - Programming is for the young"
          byline: "Start with a softball..."
        - title: "#2 - You lose time and energy"
          byline: "Ok, this one is true"
        - title: "#3 - Side projects get a lot harder"
          byline: "The problem is knowing too much"
        - title: "#4 - Too old to create a startup"
          byline: "The average age is 45"
        - title: "#5 - A 40+ dev is a failed dev"
          byline: "Many paths to satisfaction"
        - title: "#6 - Hard to get a new job"
          byline: "Ageism is real"
        - title: "#7 - New tech is worse"
          byline: "Maybe, but the game changed"
        - title: "#8 - Javascript is a mess"
          byline: "Ok, this one is true :)"
        - title: "#9 - Older devs are better at working remote"
          byline: "Yes, but not always"
        - title: "#10 - Older devs should be in management"
          byline: "Management is a different career"
        - title: "#11 - The best team is senior-only"
          byline: "Need a mix for best results"
        - title: "#12 - Over 40 is too late to get started"
          byline: "Never too late"
        - title: "What myths do you see or still hold?"
          byline: "Let's hear it"
    - start: "2021-12-09T15:00"
      title: "[Python] Startup coding"
    - start: "2021-12-14T15:00"
      title: "Discussion topic: TBD"
    - start: "2021-12-16T15:00"
      title: "[Python] Startup coding"
    - start: "2021-12-21T15:00"
      title: "Discussion topic: TBD"
    - start: "2021-12-23T15:00"
      title: "[Python] Startup coding"


